define("#class/0.9.2/class",[],function(){function Class(o){if(!(this instanceof Class)&&isFunction(o))return classify(o)}function implement(properties){var key,value;for(key in properties)value=properties[key],Class.Mutators.hasOwnProperty(key)?Class.Mutators[key].call(this,value):this.prototype[key]=value}function classify(cls){return cls.extend=Class.extend,cls.implement=implement,cls}function Ctor(){}function mix(r,s,wl){for(var p in s)if(s.hasOwnProperty(p)){if(wl&&indexOf(wl,p)===-1)continue;p!=="prototype"&&(r[p]=s[p])}}Class.create=function(parent,properties){function SubClass(){parent.apply(this,arguments),this.constructor===SubClass&&this.initialize&&this.initialize.apply(this,arguments)}return isFunction(parent)||(properties=parent,parent=null),properties||(properties={}),parent||(parent=properties.Extends||Class),properties.Extends=parent,parent!==Class&&mix(SubClass,parent,parent.StaticsWhiteList),implement.call(SubClass,properties),classify(SubClass)},Class.extend=function(properties){return properties||(properties={}),properties.Extends=this,Class.create(properties)},Class.Mutators={Extends:function(parent){var existed=this.prototype,proto=createProto(parent.prototype);mix(proto,existed),proto.constructor=this,this.prototype=proto,this.superclass=parent.prototype},Implements:function(items){isArray(items)||(items=[items]);var proto=this.prototype,item;while(item=items.shift())mix(proto,item.prototype||item)},Statics:function(staticProperties){mix(this,staticProperties)}};var createProto=Object.__proto__?function(proto){return{__proto__:proto}}:function(proto){return Ctor.prototype=proto,new Ctor},toString=Object.prototype.toString,isArray=Array.isArray;isArray||(isArray=function(val){return toString.call(val)==="[object Array]"});var isFunction=function(val){return toString.call(val)==="[object Function]"},indexOf=Array.prototype.indexOf?function(arr,item){return arr.indexOf(item)}:function(arr,item){for(var i=0,len=arr.length;i<len;i++)if(arr[i]===item)return i;return-1};return Class});